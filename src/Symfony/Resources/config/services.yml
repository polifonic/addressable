services:
    polifonic.addressable.form.type.addressable:
        class: Polifonic\Addressable\Symfony\Form\Type\AddressableFormType
        arguments:
            - "@polifonic.addressable.geoip.listener"
            - "%polifonic.addressable.geoip.enabled%"
        tags:
            - { name: form.type }

    polifonic.addressable.geoip.listener:
        class: Polifonic\Addressable\Symfony\EventListener\GeoipListener
        arguments:
            - "@request_stack"
            - "@polifonic.addressable.geoip.provider"
        calls:
            - [ setLocalIp, [ "%polifonic.addressable.geoip.ip_address%" ] ]
        tags:
            - { name: kernel.event_subscriber }

    polifonic.addressable.geoip.reader:
        class: Geoip2\Database\Reader
        factory: [ "@cravler_max_mind_geo_ip.service.geo_ip_service", getReader ]
#        arguments: [ "city", [ "@=service('request_stack').getCurrentRequest().getLocale()" ] ]
        arguments: [ "city" ]

    polifonic.addressable.formatter:
        class: Polifonic\Addressable\Formatter\Formatter
        factory: [ Polifonic\Addressable\Formatter\Formatter, getInstance ]
        calls:
            - [ setBaseCountry, [ "%polifonic.addressable.base_country%" ] ]

    polifonic.addressable.twig.extension.address:
        class: Polifonic\Addressable\Twig\Extension\AddressableExtension
        arguments:
            - "@polifonic.addressable.formatter"
        tags:
            - { name: twig.extension }

#    polifonic.addressable.validator.country:
#        class: Polifonic\Addressable\Validator\CountryValidator
#        arguments: [ "@validator" ]
#        tags:
#            - { name: validator.constraint_validator }